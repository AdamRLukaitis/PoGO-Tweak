// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Settings.Master.Pokemon.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "PogoprotosSettingsMasterPokemon.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - PogoprotosSettingsMasterPokemonRoot

@implementation PogoprotosSettingsMasterPokemonRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - PogoprotosSettingsMasterPokemonRoot_FileDescriptor

static GPBFileDescriptor *PogoprotosSettingsMasterPokemonRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"POGOProtos.Settings.Master.Pokemon"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - CameraAttributes

@implementation CameraAttributes

@dynamic diskRadiusM;
@dynamic cylinderRadiusM;
@dynamic cylinderHeightM;
@dynamic cylinderGroundM;
@dynamic shoulderModeScale;

typedef struct CameraAttributes__storage_ {
  uint32_t _has_storage_[1];
  float diskRadiusM;
  float cylinderRadiusM;
  float cylinderHeightM;
  float cylinderGroundM;
  float shoulderModeScale;
} CameraAttributes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "diskRadiusM",
        .dataTypeSpecific.className = NULL,
        .number = CameraAttributes_FieldNumber_DiskRadiusM,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(CameraAttributes__storage_, diskRadiusM),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "cylinderRadiusM",
        .dataTypeSpecific.className = NULL,
        .number = CameraAttributes_FieldNumber_CylinderRadiusM,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(CameraAttributes__storage_, cylinderRadiusM),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "cylinderHeightM",
        .dataTypeSpecific.className = NULL,
        .number = CameraAttributes_FieldNumber_CylinderHeightM,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(CameraAttributes__storage_, cylinderHeightM),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "cylinderGroundM",
        .dataTypeSpecific.className = NULL,
        .number = CameraAttributes_FieldNumber_CylinderGroundM,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(CameraAttributes__storage_, cylinderGroundM),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "shoulderModeScale",
        .dataTypeSpecific.className = NULL,
        .number = CameraAttributes_FieldNumber_ShoulderModeScale,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(CameraAttributes__storage_, shoulderModeScale),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[CameraAttributes class]
                                     rootClass:[PogoprotosSettingsMasterPokemonRoot class]
                                          file:PogoprotosSettingsMasterPokemonRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(CameraAttributes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - EncounterAttributes

@implementation EncounterAttributes

@dynamic baseCaptureRate;
@dynamic baseFleeRate;
@dynamic collisionRadiusM;
@dynamic collisionHeightM;
@dynamic collisionHeadRadiusM;
@dynamic movementType;
@dynamic movementTimerS;
@dynamic jumpTimeS;
@dynamic attackTimerS;

typedef struct EncounterAttributes__storage_ {
  uint32_t _has_storage_[1];
  float baseCaptureRate;
  float baseFleeRate;
  float collisionRadiusM;
  float collisionHeightM;
  float collisionHeadRadiusM;
  PokemonMovementType movementType;
  float movementTimerS;
  float jumpTimeS;
  float attackTimerS;
} EncounterAttributes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseCaptureRate",
        .dataTypeSpecific.className = NULL,
        .number = EncounterAttributes_FieldNumber_BaseCaptureRate,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(EncounterAttributes__storage_, baseCaptureRate),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "baseFleeRate",
        .dataTypeSpecific.className = NULL,
        .number = EncounterAttributes_FieldNumber_BaseFleeRate,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(EncounterAttributes__storage_, baseFleeRate),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "collisionRadiusM",
        .dataTypeSpecific.className = NULL,
        .number = EncounterAttributes_FieldNumber_CollisionRadiusM,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(EncounterAttributes__storage_, collisionRadiusM),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "collisionHeightM",
        .dataTypeSpecific.className = NULL,
        .number = EncounterAttributes_FieldNumber_CollisionHeightM,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(EncounterAttributes__storage_, collisionHeightM),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "collisionHeadRadiusM",
        .dataTypeSpecific.className = NULL,
        .number = EncounterAttributes_FieldNumber_CollisionHeadRadiusM,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(EncounterAttributes__storage_, collisionHeadRadiusM),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "movementType",
        .dataTypeSpecific.enumDescFunc = PokemonMovementType_EnumDescriptor,
        .number = EncounterAttributes_FieldNumber_MovementType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(EncounterAttributes__storage_, movementType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "movementTimerS",
        .dataTypeSpecific.className = NULL,
        .number = EncounterAttributes_FieldNumber_MovementTimerS,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(EncounterAttributes__storage_, movementTimerS),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "jumpTimeS",
        .dataTypeSpecific.className = NULL,
        .number = EncounterAttributes_FieldNumber_JumpTimeS,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(EncounterAttributes__storage_, jumpTimeS),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "attackTimerS",
        .dataTypeSpecific.className = NULL,
        .number = EncounterAttributes_FieldNumber_AttackTimerS,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(EncounterAttributes__storage_, attackTimerS),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[EncounterAttributes class]
                                     rootClass:[PogoprotosSettingsMasterPokemonRoot class]
                                          file:PogoprotosSettingsMasterPokemonRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(EncounterAttributes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t EncounterAttributes_MovementType_RawValue(EncounterAttributes *message) {
  GPBDescriptor *descriptor = [EncounterAttributes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:EncounterAttributes_FieldNumber_MovementType];
  return GPBGetMessageInt32Field(message, field);
}

void SetEncounterAttributes_MovementType_RawValue(EncounterAttributes *message, int32_t value) {
  GPBDescriptor *descriptor = [EncounterAttributes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:EncounterAttributes_FieldNumber_MovementType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - StatsAttributes

@implementation StatsAttributes

@dynamic baseStamina;
@dynamic baseAttack;
@dynamic baseDefense;
@dynamic dodgeEnergyDelta;

typedef struct StatsAttributes__storage_ {
  uint32_t _has_storage_[1];
  int32_t baseStamina;
  int32_t baseAttack;
  int32_t baseDefense;
  int32_t dodgeEnergyDelta;
} StatsAttributes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseStamina",
        .dataTypeSpecific.className = NULL,
        .number = StatsAttributes_FieldNumber_BaseStamina,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(StatsAttributes__storage_, baseStamina),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "baseAttack",
        .dataTypeSpecific.className = NULL,
        .number = StatsAttributes_FieldNumber_BaseAttack,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(StatsAttributes__storage_, baseAttack),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "baseDefense",
        .dataTypeSpecific.className = NULL,
        .number = StatsAttributes_FieldNumber_BaseDefense,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(StatsAttributes__storage_, baseDefense),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "dodgeEnergyDelta",
        .dataTypeSpecific.className = NULL,
        .number = StatsAttributes_FieldNumber_DodgeEnergyDelta,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(StatsAttributes__storage_, dodgeEnergyDelta),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[StatsAttributes class]
                                     rootClass:[PogoprotosSettingsMasterPokemonRoot class]
                                          file:PogoprotosSettingsMasterPokemonRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(StatsAttributes__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
